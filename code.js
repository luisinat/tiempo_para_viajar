/*Funci√≥n para cambiar la imagen del logo al apoyar el cursor sobre el*/

/*La funci√≥n "cambiarImagen()" cambia la imagen a una nueva imagen. Al retirar el cursor, la funci√≥n "restaurarImagen()" se activa y restablece la imagen original*/
function cambiarImagen() {
  document.getElementById('logo').src = './imagenes/venecia.jpg';
}

function restaurarImagen() {
  document.getElementById('logo').src = './imagenes/miimagen.PNG';
}





/*Con este c√≥digo cambio de color el fondo de mi html al hacer scroll hacia abajo*/
window.addEventListener('scroll', function() {
  const scroll = window.scrollY; /*Declaro una constante llamada "scroll"*/

  /* Utilizo un condicinal para cambiar el color de fondo al hacer scroll. De blanco a rosa*/
  if (scroll > 500) {
      document.body.style.backgroundColor = '#FFC0CB'; /*Cambia a un color rosa al hacer scroll m√°s all√° de 500px*/
  } else {
      document.body.style.backgroundColor = '#fff'; /*Si no, vuelve al color blanco original si se hace scroll arriba de 500px*/
  }
});





/*Con los siguientes c√≥digos lo que hago es que al apretar el bot√≥n "Gu√≠a de viaje paso a paso: Roma " aparezca una breve historia de Roma*/

/*Ac√° obtengo la referencia al bot√≥n y al p√°rrafo por su class*/
let botonHistoria = document.getElementsByClassName("botonHistoria")[0];
let resultadoHistoria = document.getElementsByClassName("historia")[0];

/*Ac√° agrego un manejador de eventos al bot√≥n, donde al apretarlo explica la historia de Roma brevemente mediante la incorporaci√≥n de un p√°rrafo*/
botonHistoria.addEventListener("click", function() {
    resultadoHistoria.textContent = "¬°Roma es una ciudad italiana, capital de la regi√≥n del Lacio y de Italia. Con una poblaci√≥n de 2 857 321 habitantes,es el municipio m√°s poblado de Italia y la tercera ciudad m√°s poblada de la Uni√≥n Europea. Por antonomasia, se le conoce desde la Antig√ºedad como la Urbe (Urbs). Tambi√©n es llamada ¬´La Ciudad Eterna¬ª En el transcurso de su historia, que abarca tres milenios, lleg√≥ a extender sus dominios sobre toda la cuenca del Mediterr√°neo y gran parte de Europa, Oriente Pr√≥ximo y √Åfrica del Norte. Como capital de la Rep√∫blica y del Imperio romano, lleg√≥ a ser la primera gran metr√≥polis de la humanidad,centro de una de las civilizaciones antiguas m√°s importantes. Influy√≥ en la sociedad, la cultura, la lengua, la literatura, la m√∫sica, el arte, la arquitectura, la filosof√≠a, la gastronom√≠a, la religi√≥n, el derecho y la moral de los siglos sucesivos.!";
});

/*Con los siguientes c√≥digos lo que hago es que el bot√≥n cambie de color al ingresar con el cursor sobre el y al salir con el cursor sobre el cambie nuevamente*/

/*Obtengo una referencia al bot√≥n de la historia de Roma por su class*/
let botonHistoriaConEstilo = document.getElementsByClassName("botonHistoria")[0];

/*Agrego un manejador de eventos para el evento "mouseenter" (cuando el cursor entra al bot√≥n)*/
botonHistoriaConEstilo.addEventListener("mouseenter", function() {
  botonHistoriaConEstilo.style.backgroundColor = "blueviolet";
  botonHistoriaConEstilo.style.color = "white";
});

// Aca agrego un manejador de eventos para el evento "mouseleave" (cuando el cursor sale del bot√≥n)
botonHistoriaConEstilo.addEventListener("mouseleave", function() {
  botonHistoriaConEstilo.style.backgroundColor = "greenyellow";
  botonHistoriaConEstilo.style.color = "white";
  botonHistoriaConEstilo.style.border = "none";
});

/*Agrego otros estilos al bot√≥n sobre la historia de Roma*/
botonHistoriaConEstilo.style.padding = "10px 20px";
botonHistoriaConEstilo.style.border = "none";
botonHistoriaConEstilo.style.cursor = "pointer";
botonHistoriaConEstilo.style.transition = "background-color 0.3s";





/*Ac√° lo que hago es darle funcionalidad a los botones del PopUp de contacto que cree. Es decir si la persona toca sobre el bot√≥n "si" se abre un cartel que te pregunta si queres que te redirija autom√°ticamente a la secci√≥n del formulario. En cambio si el usuario apreta "no" no te redirige y te agradece igualmente con un cartel.*/

/* Ac√° obtengo la referencia al PopUp mediante su ID y declaro la constante "popUpContacto". */
document.addEventListener("DOMContentLoaded", function() {
  const popUpContacto = document.getElementById('popUpContacto');

  /* Ac√° obtengo la referencia al bot√≥n "si" y "no" a trav√©s de su ID. */
  const botonSi = document.getElementById('si');
  const botonNo = document.getElementById('no');

  /* Ac√° establezco que al apretar "si" un cartel de alerta se abra y me consulte si acepto que me redirija al formulario de mi hmtl. */
  botonSi.addEventListener('click', function() {
    alert("¬°Ser√°s redirigido a nuestro formulario de contacto!");
    window.location.href = "index.html#formulario"; /*Ac√° establezco la ruta del formulario de contacto*/
  });

  /* Ac√° establezco que al apretar "no" aparezca un cartel de agradecimiento*/
  botonNo.addEventListener('click', function() {
    alert("¬°Gracias! Estamos aqu√≠ para ayudarte si cambias de opini√≥n.");
    popUpContacto.removeChild(cuadroDialogo);
  });
});





/*Aca defino la clase base gen√©rica "Destino" para aplicar programaci√≥n en base a objetos de la clase 13 del curso. Con esto lo que hago es agregar tres descripciones de cada una de las fotos del carrusel debajo del mismo. Una por la fontana di trevi, otra por el foro romano y otra por el monumento. */

/*Creo la clase destino. La clase gen√©rica.*/
class Destino {
  descripcion() {
    return 'Descripci√≥n del destino';
  }
}

/*Ac√° creo la subclase "Fontana" que hereda de "Destino".*/
class Fontana extends Destino {
  descripcion() {
    return 'Una de las mayores fuentes monumentales del Barroco en Roma. Seg√∫n la actual divisi√≥n administrativa del centro de Roma, est√° situada en el rione de Trevi.';
  }
}

/*Ac√° creo la subclase "Foro" que hereda de "Destino".*/
class Foro extends Destino {
  descripcion() {
    return 'la zona central ‚Äîsemejante a las plazas centrales en las ciudades actuales‚Äî donde se encuentran las instituciones de gobierno, de mercado y religiosas.';
  }
}

/*Ac√° creo la subclase "Monumento" que hereda de "Destino".*/
class Monumento extends Destino {
  descripcion() {
    return 'Es un enorme monumento conmemorativo de la ciudad de Roma, Italia, realizado en honor del primer rey de la Italia unificada, V√≠ctor Manuel II.';
  }
}

/* Esta funci√≥n la uso para mostrar informaci√≥n/descripci√≥n de un destino en espec√≠fico.*/
function mostrarDescripcion(destino) {
  const infoDestinos = document.getElementById('infoDestinos');
  const parrafoInfoDestino = document.createElement('p');
  parrafoInfoDestino.textContent = destino.descripcion();
  infoDestinos.appendChild(parrafoInfoDestino);
}

/* Declaro las constantes de los tres destinos.*/
const destinoFontana = new Fontana();
const destinoForo = new Foro();
const destinoMonumento = new Monumento();

/*Muestro la descripci√≥n de cada destino en mi p√°gina web (html)*/
mostrarDescripcion(destinoFontana);
mostrarDescripcion(destinoForo);
mostrarDescripcion(destinoMonumento);





/* Con las siguientes lineas de codigo busco que sea obligatorio el ingreso del nombre, apellido, consulta y email por parte del usuario. A su vez que se verifique si el email ingresado esta ok, en caso de ser asi que se envie el form y me largue un mensaje que se env√≠o limpiandose todos los campos al enviar, caso contrario que me avise que es invalido el email.*/

/*Funci√≥n para verificar si el email es v√°lido para enviar el formulario.*/
function validarEmail(email) {
  const regla = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return regla.test(email);
}
/*Obtengo la referencia al formulario, al resultado, nombre, apellido, consulta y al correo electr√≥nico con sus ID y declaro las constantes.*/
const form = document.getElementById('formulario');
const nombreInput = document.getElementById('nombre');
const apellidoInput = document.getElementById('apellido');
const emailInput = document.getElementById('email');
const consultaInput = document.getElementById('texto');
const resultMessage = document.getElementById('result');

/*Agrego un event listener al formulario.*/
form.addEventListener('submit', function (e) {
  e.preventDefault();
  const email = emailInput.value;
  const nombre = nombreInput.value;
  const apellido = apellidoInput.value;
  const consulta = consultaInput.value;

  /*Realizo un condicional para verificar si se ingreso el nombre, apellido, email y consulta ya que son obligatorios.*/
  if (nombre.trim() === '' || apellido.trim() === '' || email.trim() === '' || consulta.trim() === '') {
    resultMessage.textContent = 'Por favor complete todos los campos requeridos con *.';
    return;
  }

  /*Realizo un condicional para verificar si es v√°lido o no el email ingresado por el usuario.*/
  if (!validarEmail(email)) {
    resultMessage.textContent = 'Email inv√°lido. Por favor, ingrese un email v√°lido.';
    return;
  }
  resultMessage.textContent = '¬°Gracias por su consulta. La responderemos en breve!';

  /*Limpio los campos despu√©s del env√≠o del formulario correctamente.*/
  nombreInput.value = '';
  apellidoInput.value = '';
  emailInput.value = '';
  consultaInput.value = '';

});





/*Funci√≥n para contar autom√°ticamente los caracteres del campo consulta al escribir en el formulario.*/
function contarCaracteres(input) {
  let longitud = input.value.length;
  document.getElementById('contador-caracteres').innerText = " Caracteres ingresados: " + longitud;
}





/* Creo un array llamado "comentarios", que contiene distintos objetos con informaci√≥n de usuario, avatar y texto para cada comentario que se agregar√° al tocar el bot√≥n "agregar comentario". */
document.addEventListener('DOMContentLoaded', function() {
  let comentarios = [
      { 
          usuario: 'Sebasti√°n L√≥pez',
          avatar: './imagenes/otrousuario.PNG',
          texto: '¬°El Foro Romano es una locura! Mil a√±os de historia! üöÄ‚ú®'
      },
      {
          usuario: 'Luciana Rodriguez',
          avatar: './imagenes/otrausuaria.PNG',
          texto: '¬°El Pante√≥n es m√°gico! Prometo volver en alg√∫n otro momento. üåüüåà'
      },
  ];

let indiceComentario = 0;

/*Ac√° lo que hago con este c√≥digo es que al hacer "clic" en el bot√≥n "Agregar Comentario" se agregue un nuevo comentario a la secci√≥n de comentarios de mi html. Debajo de un comentario fijo se agregaran otros.*/

/* Ac√° agrego un escuchador de eventos al bot√≥n con el ID "addCommentBtn". Cuando se hace clic en este bot√≥n, se ejecuta la funci√≥n especificada entre las llaves*/
document.getElementById('botonComentario').addEventListener('click', function() {
  
  /*Creo un nuevo elemento HTML div que representar√° un comentario*/
  let newComment = document.createElement('div');
  newComment.className = 'comentario'; /*Asigno la clase CSS "comment" al nuevo elemento div, lo que le dar√° los estilos predefinidos para los comentarios*/

  /*Creo un nuevo elemento div para la secci√≥n de informaci√≥n del usuario.*/
  let userInfo = document.createElement('div');
  userInfo.className = 'informacionUsuario';
  userInfo.innerHTML = `<img src="${comentarios[indiceComentario].avatar}" alt="User Avatar"><h4>${comentarios[indiceComentario].usuario}</h4>`;

  /*Creo un nuevo elemento div para la secci√≥n de contenido del comentario.*/
  let commentContent = document.createElement('div');
  /*Defino un p√°rrafo con el texto del comentario y emoticones.*/
  commentContent.className = 'contenidoComentario';
  commentContent.innerHTML = `<p>${comentarios[indiceComentario].texto}</p>`;

  /*Agrego los elementos de informaci√≥n del usuario y el contenido del comentario al elemento principal del nuevo comentario*/
  newComment.appendChild(userInfo);
  newComment.appendChild(commentContent);

// Agrega el nuevo comentario 1 a la secci√≥n de comentarios
document.querySelector('.seccionComentarios').appendChild(newComment);

// Incrementa el √≠ndice del comentario para el pr√≥ximo clic
indiceComentario = (indiceComentario + 1) % comentarios.length;
});
});





/*Ac√° con los siguientes c√≥digos busco que se muestren mensajes al enviar por parte del usuario reacciones sobre mi p√°gina.*/

/*Obtengo la referencia al contenedor de reacciones usando su ID "reactions".*/
const reactionsContainer = document.getElementById('reactions');

/*Obtengo una lista de elementos con la clase CSS "reaction" dentro del contenedor de reacciones.*/
const reactions = reactionsContainer.querySelectorAll('.reaction');

/*Defino una funci√≥n para manejar la selecci√≥n de reacciones que llamo "react".*/
function react(event) {
  /*Previene el comportamiento predeterminado del evento (por ejemplo, la navegaci√≥n en caso de un enlace).*/
  event.preventDefault();
  
  /*Obtiene el valor del atributo "data-reaction" del elemento que activ√≥ el evento.*/
  const reaction= this.getAttribute('data-reaction');
  
  /*Muestro un alerta con la reacci√≥n seleccionada.*/
  alert(`Seleccionaste la reacci√≥n: ${reaction}`);
}

/*Agrego un evento de "click" a cada elemento de reacci√≥n en la lista "reactions".*/
reactions.forEach(reaction => {
  reaction.addEventListener('click', react);
});





/* Con los siguientes c√≥digos busco que al pasar el cursor por el bot√≥n de "seguime en twitter" cambie de color 3 veces. Un color original del bot√≥n, uno al ingresar y otro al salir.*/

/*Obtengo la referencia al bot√≥n de "seguime en twitter" por su clase para que cambie del color original (blueviolet) y declaro la variable.*/
let boton2 = document.getElementsByClassName("button2")[0];

/*Agrego un manejador de eventos para el evento "mouseenter" (cuando el cursor entra en el bot√≥n cambia a greenyellow).*/
boton2.addEventListener("mouseenter", function() {
  boton2.style.backgroundColor = "greenyellow";
});

/*Agrego un manejador de eventos para el evento "mouseleave" (cuando el cursor sale del bot√≥n cambia a blue).*/
boton2.addEventListener("mouseleave", function() {
  boton2.style.backgroundColor = "blue";
});





/*Con este c√≥digo asigno a una variable el elemento "correo" de contacto para que al posicionar el cursor sobre este se agrande y luego vuelva a su tama√±o original. */
let contactocorreo = document.getElementById('correo');

contactocorreo.addEventListener('mouseover', function() {
    contactocorreo.style.transform = 'scale(1.2)';
});

contactocorreo.addEventListener('mouseout', function() {
    contactocorreo.style.transform = 'scale(1)';
});

/* Con este c√≥digo asigno a una variable el elemento "telefono" de contacto para que al posicionar el cursor sobre este se agrande y luego vuelva a su tama√±o original*/
let contactotelefono = document.getElementById('telefono');

contactotelefono.addEventListener('mouseover', function() {
    contactotelefono.style.transform = 'scale(1.2)';
});

contactotelefono.addEventListener('mouseout', function() {
    contactotelefono.style.transform = 'scale(1)';
});







